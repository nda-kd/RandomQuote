{"version":3,"sources":["assets/twitter.svg","assets/next.svg","Components/QuoteBox/QuoteBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["QuoteBox","useState","randomQ","setRandomQ","RandomGenerateQ","a","Math","floor","random","data","useEffect","id","className","Quote","author","href","target","rel","src","TwitterIcon","alt","onClick","Next","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sjDAAe,G,MAAA,IAA0B,qCCA1B,MAA0B,iC,cC2C1BA,MArCf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAkB,WACtB,IAAIC,EAAIC,KAAKC,MAAM,GAAAD,KAAKE,UACxBL,EAAWM,IAAKJ,KAMlB,OAHAK,qBAAU,WACRN,MACC,IAED,sBAAKO,GAAG,YAAR,UACE,sBAAKC,UAAU,aAAf,UACE,qBAAKD,GAAG,OAAR,SAAgBT,EAAQW,QACxB,qBAAKF,GAAG,cAAR,SACE,sBAAMA,GAAG,SAAT,SAAmBT,EAAQY,cAG/B,sBAAKF,UAAU,cAAf,UACE,mBACEG,KAAM,yCAA2Cb,EAAQW,MACzDG,OAAO,SACPC,IAAI,aACJN,GAAG,cAJL,SAME,qBAAKO,IAAKC,EAAaC,IAAI,mBAE7B,yBAAQT,GAAG,YAAYU,QAASjB,EAAhC,UACE,wCACA,qBAAKc,IAAKI,EAAMF,IAAI,e,MCzBfG,MARf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,OCMSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.973973a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/twitter.d8203e37.svg\";","export default __webpack_public_path__ + \"static/media/next.8b18acdd.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport \"./QuoteBox.scss\";\r\nimport TwitterIcon from \"../../assets/twitter.svg\";\r\nimport Next from \"../../assets/next.svg\";\r\nimport { data } from \"../../quotes.json\";\r\n\r\nfunction QuoteBox() {\r\n  const [randomQ, setRandomQ] = useState({});\r\n\r\n  const RandomGenerateQ = () => {\r\n    let a = Math.floor(Math.random() * (9 - 0 + 1));\r\n    setRandomQ(data[a]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    RandomGenerateQ();\r\n  }, []);\r\n  return (\r\n    <div id=\"quote-box\">\r\n      <div className=\"quote-wrap\">\r\n        <div id=\"text\">{randomQ.Quote}</div>\r\n        <div id=\"author-wrap\">\r\n          <span id=\"author\">{randomQ.author}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"button-wrap\">\r\n        <a\r\n          href={\"https://twitter.com/intent/tweet?text=\" + randomQ.Quote}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          id=\"tweet-quote\"\r\n        >\r\n          <img src={TwitterIcon} alt=\"twitter-icon\"></img>\r\n        </a>\r\n        <button id=\"new-quote\" onClick={RandomGenerateQ}>\r\n          <span>Next</span>\r\n          <img src={Next} alt=\"\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuoteBox;\r\n","import QuoteBox from \"./Components/QuoteBox/QuoteBox\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QuoteBox />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}